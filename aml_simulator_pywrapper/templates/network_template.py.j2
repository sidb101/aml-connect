{# This template is used to generate the Python source code for the Aspinity
    SDK. The template is rendered using the Jinja2 templating engine. #}
# pylint: skip-file
# !/usr/bin/python3
from aspinity import Network, simulate
import soundfile as sf
import numpy as np
from aspinity import FilterType, GainOpampMode, ActivationFunction, ModelVersion
from aspinity import (
    {% for import in element_imports -%}
    {{ import }}, 
    {%- if not loop.last %}{{"\n\t"}}{% else %}{{"\n"}}{% endif %}
    {%- endfor -%}
)

def load_wav():
    samples, sample_rate = sf.read(r"{{ wav_file_path }}")
    times = np.arange(len(samples)) / sample_rate
    return times, samples

network = Network()
network.add(
    {% for element in elements -%}
    {{ element.element_type }}(
        {% for key, val in element.terminals.items() -%}
        {{ key }} = {% if val | get_type == 'str' %}"{{val}}"{% else %}{{val}}{% endif %},
        {%- if not loop.last %}{{"\n\t\t"}}{% else %}{{"\n\t\t"}}{% endif %}
        {%- endfor -%}
        {% for key, val in element.parameters.items() -%}
        {{ key }} = {% if val | get_type == 'str' %}"{{val}}"{% else %}{{val}}{% endif %}, 
        {%- if not loop.last %}{{"\n\t\t"}}{% else %}{{"\n\t"}}{% endif %}
        {%- endfor -%}
    ),
    {%- if not loop.last %}{{"\n\t"}}{% else %}{{"\n"}}{% endif %}
    {%- endfor -%}
)

times, samples = load_wav()
res = simulate(network, times, samples)
print(res)