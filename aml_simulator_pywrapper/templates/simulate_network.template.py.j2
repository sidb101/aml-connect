{# Template for generating Python Source Code #}
{# ========================================== #}
{# !/usr/bin/env python3                      #}
{#  -*- coding: utf-8 -*-                     #}
{# ------------------------------------------ #}

# !/usr/bin/env python3
from aspinity import Network, simulate
import soundfile as sf
import numpy as np
from aspinity import (
    {% for import in component_imports %}
    {{ import }},
    {% endfor %}
)

def load_wav():
    samples, sample_rate = sf.read({{ wav_file_path }})
    times = np.arange(len(samples)) / sample_rate
    return times, samples

newtork = Network()
network.add(
    {% for element in components %}
    {{ component["element_type"] }}(
        {% for key, val in component["terminals"].items() %}
        {{ key }}="{{ val }}", {# TODO: Add quotes only if string, figure out type inference here #}
        {% endfor %}
    ),
    {% endfor %}
)

times, samples = load_wav()
res = simulate(network, times, samples)